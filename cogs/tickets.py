# -*- coding: utf-8 -*-

import asyncio
import os
import random

import discord
from discord.ext import commands
from discord.ext.commands import has_permissions
from sqlalchemy import create_engine, Column, Integer, String, select
from sqlalchemy.exc import IntegrityError
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

from components import ButtonNo, ButtonYes, TicketCloseView, TicketOpenView

engine = create_engine("sqlite:///ticket-data.db", echo=False)
Base = declarative_base()


class Ticket(Base):
    __tablename__ = "ticket"

    id = Column(Integer, autoincrement=True, unique=True, primary_key=True)
    channel_id = Column('channel_id', Integer, nullable=True)
    author = Column('author_id', Integer, unique=True)
    messages = Column('messages', String, nullable=True)


Base.metadata.create_all(bind=engine)
Session = sessionmaker(bind=engine, future=True)


class Tickets(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.category_id = os.getenv("TICKETS_CATEGORY")
        self.session = Session()

    # –ö–û–ú–ê–ù–î–ê –î–õ–Ø –û–¢–ü–†–ê–í–ö–ò –°–û–û–ë–©–ï–ù–ò–Ø –î–ï–ë–ê–ì–ê, –ï–°–õ–ò –ß–¢–û-–¢–û –°–õ–û–ú–ê–õ–û–°–¨
    # –ü–†–ò–ú–ï–ß–ê–ù–ò–ï: –°–û–û–ë–©–ï–ù–ò–ï –û–¢–ü–†–ê–í–õ–Ø–ï–¢–°–Ø –í –ö–ê–ù–ê–õ –û–¢–ü–†–ê–í–ö–ò –ö–û–ú–ê–ù–î–´.

    @has_permissions(administrator=True)
    @commands.command(name='debug-STM')
    async def debug_stm(self, ctx):

        embed = discord.Embed(
            description="–ü—Ä–∏–≤–µ—Ç, –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π **—Ç–∏–∫–µ—Ç**, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞—à "
                        "**–∞–≥–µ–Ω—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏** –∏ –ø–æ–º–æ–∂–µ—Ç —Ä–µ—à–∏—Ç—å –ª—é–±–æ–π –≤–∞—à –≤–æ–ø—Ä–æ—Å ! –ü–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º "
                        "—É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å *–Ω–µ—Ç—É –≤ F.A.Q.*.  *–¢–∞–∫-–∂–µ —É –Ω–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∞–≤–∏–ª "
                        "–¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤:*\n\n"
                        "- –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å **—Ç–æ–ª—å–∫–æ 1 —Ç–∏–∫–µ—Ç –∑–∞ —Ä–∞–∑**!\n"
                        "- –ö–æ–≥–¥–∞ –≤—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ —Ç–∏–∫–µ—Ç –≤–∞–º –æ–ø–∏—à–µ—Ç—Å—è —Å–≤–æ–¥ –ø—Ä–∞–≤–∏–ª, –ø—Ä–∏ –∏—Ö –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –≤–∞—Å –º–æ–≥—É –Ω–∞–∫–∞–∑–∞—Ç—å!\n\n"
                        "–°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –æ–ø–∏—Å–∞—Ç—å –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ, —á—Ç–æ–±—ã –Ω–∞—à–∏ –∞–≥–µ–Ω—Ç—ã –º–æ–≥–ª–∏ –≤–∞–º –ø–æ–º–æ—á—å "
                        "–∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ!\n\n"
                        "**–î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –û—Ç–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º!**",
            colour=discord.Colour.purple()
        )
        embed.set_author(name='Plazmix Staff Team', icon_url='https://i.imgur.com/k2A19QL.png')
        embed.set_footer(text='(c) Plazmix Staff Team')

        await ctx.send(embed=embed, view=TicketOpenView())

    # —Ç—É—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –¥–µ–±–∞–≥

    async def send_misc_messages(self, channel: discord.TextChannel, user: discord.Member):
        await channel.send(
            content=f"{user.mention}",
            embed=discord.Embed(
                title="Plazmix Tickets",
                colour=discord.Color.purple(),
                description=f"**–ü—Ä–∏–≤–µ—Ç, {user.mention}**, –≤—ã –æ—Ç–∫—Ä—ã–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —á–∞—Ç —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π "
                            f"–ø—Ä–æ–µ–∫—Ç–∞, –ø–æ –Ω–∞—à–∏–º —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞–º —É –≤–∞—Å –µ—Å—Ç—å 1 —á–∞—Å –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —ç—Ç–æ—Ç "
                            f"–∫–∞–Ω–∞–ª, –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –Ω–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞–∫—Ä–æ–µ—Ç —ç—Ç–æ—Ç —Ç–∏–∫–µ—Ç –∏ –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å "
                            f"–Ω–æ–≤—ã–π –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ "
                            f"—Ç–æ—á–Ω–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ–±—ã –Ω–∞—à–∏ –∞–≥–µ–Ω—Ç—ã —Å–º–æ–≥–ª–∏ –≤–∞–º –ø–æ–º–æ—á—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ, "
                            f"—Ç–∞–∫ –∂–µ —Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—É—é –ª–µ–∫—Å–∏–∫—É –∏ –Ω–µ –æ—Å–∫–æ—Ä–±–ª—è–π—Ç–µ "
                            f"–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤, –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –Ω–∞–º –ø—Ä–∏–π–¥—ë—Ç—Å—è –≤–∞—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å. "
                            f"–ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–µ –≤ –¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ "
                            f"–¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã –æ—Ç–¥–µ–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏!\n\n"

                            "*–ï—Å–ª–∏ –≤—ã –æ—Ç–∫—Ä—ã–ª–∏ —Ç–∏–∫–µ—Ç —Å–ª—É—á–∞–π–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º. "
                            "–¢–∞–∫-–∂–µ —Å–æ–≤–µ—Ç—É–µ–º –≤–∞–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å —Ä–∞–∑–¥–µ–ª–æ–º F.A.Q. –≤–æ–∑–º–æ–∂–Ω–æ —Ç–∞–º –≤—ã —Å–º–æ–∂–µ—Ç–µ "
                            "–Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å.*\n\n"

                            "!! *–í–∞–∂–Ω–æ–µ –∑–∞–º–µ—á–∞–Ω–∏–µ: –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ 1 —Ç–∏–∫–µ—Ç –≤ —á–∞—Å* !!\n\n"

                            "**–ù–∞–ø–∏—Å–∞–≤ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ "
                            "–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö!**"
            ),
            view=TicketCloseView()
        )

    async def create_ticket_channel(self, user: discord.Member, guild) -> discord.TextChannel:
        category = await self.bot.fetch_channel(self.category_id)
        ticket = Ticket()

        ticket.author = user.id
        self.session.add(ticket)
        self.session.commit()

        channel = await category.create_text_channel(f"üìö—Ç–∏–∫–µ—Ç-{ticket.id}")

        await channel.set_permissions(user, send_messages=True, view_channel=True)

        ticket.channel_id = channel.id
        self.session.commit()

        await self.send_misc_messages(channel=channel, user=user)

        return channel

    async def open_ticket(self, user, interaction) -> str:
        try:
            channel = await self.create_ticket_channel(user=user, guild=interaction.guild)
            return f"**–í–∞—à —Ç–∏–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ -> {channel.mention}**"
        except IntegrityError:
            self.session.rollback()
            return f"**–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–π —Ç–∏–∫–µ—Ç!**\n*–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ —ç—Ç–æ –æ—à–∏–±–∫–æ–π, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ" \
                   f"—Å—Å—ã–ª–∫–µ -> <https://vk.com/plazmixdevs>*"
        except Exception as e:
            return f"**–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–æ —Å—Å—ã–ª–∫–µ -> <https://vk.com/plazmixdevs>**\n" \
                   f"*–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: `{e}`*"

    async def delete_ticket(self, interaction, channel_id, author) -> str or None:
        def transform(message):
            dt = message.created_at
            time = dt.strftime('%H:%M:%S')
            hours = int(time[:2]) + 3
            formatted = str(hours) + str(time[2:])

            return f"{formatted} | {message.author.name} ({message.author.id}): {message.content}"

        iterator = interaction.channel.history().map(transform)
        print(iterator)
        messages = await iterator.flatten()
        messages.reverse()

        self.session.query(Ticket) \
            .filter(Ticket.channel_id == channel_id) \
            .update({
            Ticket.author: str(author) + f".old.{random.randint(0, 99999)}",
            Ticket.messages: str(messages)
        })

        self.session.commit()

        await interaction.channel.delete(reason=f'–¢–∏–∫–µ—Ç "{interaction.channel.name}" '
                                                f'–∑–∞–∫—Ä—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.name}'
                                                f', ID –ê–≤—Ç–æ—Ä–∞: {author}')
        return None

    @commands.Cog.listener()
    async def on_interaction(self, interaction):

        custom_id = interaction.data.get("custom_id")

        if custom_id == "TICKET-CLOSE":
            channel = interaction.channel
            statement = select(Ticket).filter_by(channel_id=channel.id)
            result = self.session.execute(statement).all()
            if len(result) == 0:
                return

            channel_id, author_id = 0, 0

            for r in result:
                channel_id, author_id = r[0].channel_id, r[0].author

            view = discord.ui.View()
            view.add_item(ButtonYes())
            view.add_item(ButtonNo())

            local_message = await interaction.channel.send(
                embed=discord.Embed(
                    title="–í—ã —É–≤–µ—Ä–µ–Ω—ã?",
                    description="–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–∏–∫–µ—Ç?",
                    colour=discord.Colour.purple()
                ),
                view=view
            )

            try:
                local_interaction = await self.bot.wait_for('interaction', timeout=30.0)
            except asyncio.TimeoutError:
                await local_message.delete()
                temp_message = await interaction.channel.send(
                    content=":x: –í—Ä–µ–º—è –≤—ã—à–ª–æ..."
                )

                await asyncio.sleep(5)

                await temp_message.delete()

            else:

                local_custom_id = local_interaction.data.get('custom_id')

                if local_custom_id == "TICKET-YES":
                    message = await self.delete_ticket(interaction=interaction, channel_id=channel_id,
                                                       author=author_id)
                    if message is not None:
                        return
                    await local_interaction.response.defer(ephemeral=True)
                elif local_custom_id == "TICKET-NO":
                    await local_interaction.message.delete()
                else:
                    pass

            # TODO: –î–æ–¥–µ–ª–∞—Ç—å –∞–≤—Ç–æ-—É–¥–∞–ª–µ–Ω–∏–µ.

        if not custom_id == "TICKET-OPEN":
            return

        content = await self.open_ticket(user=interaction.user, interaction=interaction)

        await interaction.response.send_message(ephemeral=True, content=content)


def setup(bot):
    bot.add_cog(Tickets(bot))
